rm(list = ls())
############################
# REPLACE with **YOUR** path
############################
path <- 'C:/Users/klevan/Documents/GitHub'
###########
# LIBRARIES
###########
library(plyr,quietly = TRUE)
library(dplyr,quietly = TRUE)
library(maps,quietly = TRUE)
library(mapproj,quietly = TRUE)
library(foreign,quietly = TRUE)
library(maptools,quietly = TRUE)
library(raster,quietly = TRUE)
library(sp,quietly = TRUE)
library(graphics,quietly = TRUE)
library(vegan,quietly = TRUE)
##############
# LOADING DATA
##############
# The data in this github repository was downloaded on 8/7/2015
# Replace 'pathToData' with the location of the carabid data downloaded from NEON's web portal
pathToData <- paste(path,'carabid-workshop/data/cleaned data',sep='/')
setwd(pathToData)
bet_div <- read.csv(paste(pathToData,"carabidAbundanceDiversityData.csv",sep='/'),stringsAsFactors = FALSE,header = TRUE)
bet_field <- read.csv(paste(pathToData,"fieldData-cleaned.csv",sep='/'),stringsAsFactors = FALSE,header = TRUE); bet_field$beetleAbundance <- as.numeric(bet_field$beetleAbundance); bet_field$beetleRichness <- as.numeric(bet_field$beetleRichness)
bet_sort <- read.csv(paste(pathToData,"sortData-cleaned.csv",sep='/'),stringsAsFactors = FALSE,header = TRUE)
bet_pin <- read.csv(paste(pathToData,"pinData-cleaned.csv",sep='/'),stringsAsFactors = FALSE,header = TRUE)
weather <- read.csv(paste(path,'carabid-workshop/data',"NOAA weather data for 2014.csv",sep='/'),stringsAsFactors = FALSE,header = TRUE)
gbif <- read.csv(paste(path,'gbif-carabid/Beetles/Domain Info','carabids10-12-2015.csv',sep='/'))
bet.env <- read.csv(paste(pathToData,'bet.env.csv',sep='/'))
spp <- read.csv(paste(pathToData,'spp.csv',sep = '/'))
# Inputting NEON Domain info
setwd(paste(path,'carabid-workshop/data','map data',sep='/'))
Ddbf<-read.dbf("NEON_Domains.dbf")
Dmap<-readShapePoly("NEON_Domains.shp")
crs(Dmap) <- "+proj=utm +units=m +ellps=WGS84"
#############################
# Treating the data correctly
#############################
bet_div$collectDate <- as.Date(bet_div$collectDate,format = '%m/%d/%Y'); bet_div$etOHChangeDate <- as.Date(bet_div$etOHChangeDate,format = '%m/%d/%Y'); bet_div$processingDate <- as.Date(bet_div$processingDate,format = '%m/%d/%Y'); bet_div$identifiedDate <- as.Date(bet_div$identifiedDate,format = '%m/%d/%Y'); bet_div$individualCount<- as.numeric(bet_div$individualCount)
bet_field$collectDate <- as.Date(bet_field$collectDate,format = '%m/%d/%Y'); bet_field$setDate <- as.Date(bet_field$setDate,format = '%m/%d/%Y')
bet_sort$collectDate <- as.Date(bet_sort$collectDate,format = '%m/%d/%Y'); bet_sort$etOHChangeDate <- as.Date(bet_sort$etOHChangeDate,format = '%m/%d/%Y'); bet_sort$processingDate <- as.Date(bet_sort$processingDate,format = '%m/%d/%Y'); bet_sort$identifiedDate <- as.Date(bet_sort$identifiedDate,format = '%m/%d/%Y')
bet_pin$collectDate <- as.Date(bet_pin$collectDate,format = '%m/%d/%Y'); bet_pin$processingDate <- as.Date(bet_pin$processingDate,format = '%m/%d/%Y'); bet_pin$identifiedDate <- as.Date(bet_pin$identifiedDate,format = '%m/%d/%Y')
for (i in 1:dim(bet_div)[1]){
if (is.na(bet_div$morphospeciesID[i])==TRUE){
bet_div$morphospeciesID[i] <- ''
}
if (is.na(bet_div$taxonID[i])==TRUE){
bet_div$taxonID[i] <- ''
}
}
bet_div$fieldID <- substr(bet_div$associatedSampleID,1,19)
bet_div %>%
left_join(bet_field[c('sampleID',"nlcdClass","decimalLatitude",
"decimalLongitude","coordinateUncertainty","elevation",
"elevationUncertainty")],by=c('fieldID'='sampleID')) -> bet_div
bet_div <- bet_div[c(colnames(bet_sort),"nlcdClass","decimalLatitude",
"decimalLongitude","coordinateUncertainty","elevation",
"elevationUncertainty")]
gbif <- gbif[c("gbifid","kingdom","phylum","class","order","family","genus","species","scientificname","taxonrank","countrycode","locality",
"decimallatitude","decimallongitude","elevation","elevationaccuracy","eventdate","day",
"month","year","taxonkey","specieskey","basisofrecord","institutioncode","collectioncode",
"catalognumber","recordnumber","identifiedby","recordedby","issue")]
gbif %>%
filter(taxonrank!='FAMILY',eventdate!='') -> gbif
gbif$origin <- paste(gbif$year,'01','01',sep='-'); gbif$origin <- as.Date(gbif$origin)
gbif$eventdate <- as.Date(gbif$eventdate)
gbif %>%
filter(taxonrank=='SPECIES') -> gbif_spp
##########################################
# Creating data frames at different levels
##########################################
# bet_field; calculated at the plot level
bet_field_plot <- unique.data.frame(bet_field[c("domainID","siteID","plotID","nlcdClass",
"setDate","collectDate",'eventID')])
for (i in unique(bet_field_plot$eventID)){
bet_field %>%
filter(eventID==i)-> a
bet_div %>%
filter(plotID==substr(i,5,12),collectDate==bet_field_plot$collectDate[match(i,bet_field_plot$eventID)])-> div
div <- unique.data.frame(div[,c(1:3,5,13,14,18,19)])
div %>%
filter(taxonID!='')-> div1
bet_field_plot$nlcdClass[match(i,bet_field_plot$eventID)] <- a$nlcdClass[1]
bet_field_plot$decimalLatitude[match(i,bet_field_plot$eventID)] <- mean(a$decimalLatitude,na.rm = TRUE)
bet_field_plot$decimalLongitude[match(i,bet_field_plot$eventID)] <- mean(a$decimalLongitude,na.rm = TRUE)
bet_field_plot$geodeticDatum[match(i,bet_field_plot$eventID)] <- a$geodeticDatum[1]
bet_field_plot$coordinateUncertainty[match(i,bet_field_plot$eventID)] <- a$coordinateUncertainty[1]
bet_field_plot$elevation[match(i,bet_field_plot$eventID)] <- mean(a$elevation,na.rm = TRUE)
bet_field_plot$elevationUncertainty[match(i,bet_field_plot$eventID)] <- a$elevationUncertainty[1]
bet_field_plot$beetleAbundance[match(i,bet_field_plot$eventID)] <-sum(div$individualCount)
bet_field_plot$beetleRichness[match(i,bet_field_plot$eventID)] <- dim(div)[1]
bet_field_plot$beetleRichnessNoMorphospecies[match(i,bet_field_plot$eventID)] <- dim(div1)[1]
rm(a,div,div1)
}
# bet_field calculated at the bout level
bet_field_bout <- unique.data.frame(bet_field[,c("domainID","siteID","collectDate")])
for (i in 1:dim(bet_field_bout)[1]){
bet_field %>%
filter(domainID==bet_field_bout$domainID[i],siteID==bet_field_bout$siteID[i],
collectDate==bet_field_bout$collectDate[i]) -> a
# Coordinates
bet_field_bout$decimalLatitude[i] <- mean(a$decimalLatitude,na.rm=TRUE)
bet_field_bout$decimalLongitude[i] <- mean(a$decimalLongitude,na.rm=TRUE)
# beetle Abundance
bet_field_bout$beetleAbundance[i] <- sum(a$beetleAbundance)
# beetle Richness
bet_div %>%
filter(domainID==bet_field_bout$domainID[i],siteID==bet_field_bout$siteID[i],
collectDate==bet_field_bout$collectDate[i]) -> a
a <- unique.data.frame(a[,c('taxonID','morphospeciesID')])
bet_field_bout$beetleRichness[i] <- dim(a)[1]
}
# Making a dataframe summarizing sites
siteID <- c("BART", "HARV", "SCBI", "DSNY", "OSBS", "JERC", "UNDE", "ORNL", "TALL", "WOOD", "CPER", "STER", "ONAQ")
locales <- c('Bartlett Experimental Forest, NH','Harvard Forest, MA','Smithsonian Conservation Biology Institute, VA',
'Disney Wilderness Preserve, FL','Ordway-Swisher Biological Station, FL','Jones Ecological Research Center, GA',
'University of Notre Dame Environmental Research Center, MI','Oak Ridge, TN','Talladega National Forest, AL',
'Woodworth, ND','Central Plains Experimental Range, CO','North Sterling, CO','Onaqui-Ault, UT')
sites <- as.data.frame(cbind(siteID,locales)); rm(siteID)
# bet_field calculated at the site level
for (i in 1:dim(sites)[1]){
bet_field %>%
filter(siteID==sites$siteID[i])-> a
bet_div %>%
filter(siteID==sites$siteID[i])-> div; div <- unique.data.frame(div[c("taxonID","morphospeciesID")])
bet_div %>%
filter(siteID==sites$siteID[i],scientificName!='')->div1; div1 <- unique(div1$scientificName)
# temporal info
sites$beginSampling[i] <- min(as.character(a$setDate),na.rm = TRUE)
sites$endSampling[i] <- max(as.character(a$collectDate),na.rm = TRUE)
sites$decimalLatitude[i] <- mean(a$decimalLatitude,na.rm = TRUE)
sites$decimalLongitude[i] <- mean(a$decimalLongitude,na.rm = TRUE)
# trapping effort
sites$numTrapsSampled[i] <- dim(a)[1]
bet_field_plot %>%
filter(siteID==sites$siteID[i]) -> a1
sites$numPlotsSampled[i] <- dim(a1)[1]
# Organismal Data
sites$numCarabidsCaught[i] <- sum(a$beetleAbundance)
sites$beetleRichness[i] <- dim(div)[1]
sites$beetleRichnessNoMorphospecies[i] <- length(div1)
sites$numMammalsCaught[i] <- sum(a$numMammalsCaught,na.rm = TRUE)
sites$numHerpsCaught[i] <- sum(a$numHerpsCaught,na.rm = TRUE)
rm(a,a1,div,div1)
}
# bet_field divided by nlcdClass
types <- c("cultivatedCrops","pastureHay","grasslandHerbaceous","emergentHerbaceousWetlands","shrubScrub","deciduousForest","mixedForest","evergreenForest","woodyWetlands"); nlcd <- as.data.frame(types); rm(types)
for (i in 1:dim(nlcd)[1]){
bet_field %>%
filter(nlcdClass==nlcd$types[i]) -> a
bet_field %>%
#    select(plotID,nlcdClass) %>%
filter(nlcdClass==nlcd$types[i]) -> a1; a1 <- unique.data.frame(a1[c('plotID','nlcdClass')])
bet_div %>%
filter(nlcdClass==nlcd$types[i])-> div; div <- unique.data.frame(div[c('taxonID','morphospeciesID','nlcdClass')])
nlcd$numPlotsSampled[i] <- dim(a1)[1]
nlcd$numTrapsSampled[i] <- dim(a)[1]
nlcd$numMammalsCaught[i] <- sum(a$numMammalsCaught,na.rm = TRUE)
nlcd$numHerpsCaught[i] <- sum(a$numHerpsCaught,na.rm = TRUE)
nlcd$beetleAbundance[i] <- sum(a$beetleAbundance,na.rm=TRUE)
nlcd$beetleRichness[i] <- dim(div)[1]
rm(a,a1,div)
}
nlcd$herpsPerTrapNight <- nlcd$numHerpsCaught/(nlcd$numTrapsSampled*14) # Amount of herptile bycatch per nlcdClass per trapnight
nlcd$mamPerTrapNight <- nlcd$numMammalsCaught/(nlcd$numTrapsSampled*14)   # Amount of mammal bycatch per nlcdClass per trapnight
# Look at the list of species
for(i in sites$siteID){
bet_div %>%
filter(siteID==i,scientificName!='')->a
print(paste(i,'has',length(unique(a$scientificName)),'species',sep=' '))
print(sort(unique(a$scientificName)))
}
rm(a)
##########################
# Initial data exploration
##########################
# Looking at data quality
par(mfrow=c(1,2))
# Traps were set out for 14 day intervals; deviations can be seen in the histogram
hist(bet_field$daysOfTrapping,xlim=c(0,30),col="black",main="Typical sampling interval",xlab="Days of trapping")
# 40 traps are deployed at each interval; occasionally traps are not deployed because of environmental or logistical reasons (i.e., plot flooding, staffing limitations)
bet_field %>%
count(siteID,boutNumber) -> numTrapsDeployed
hist(numTrapsDeployed$n,xlim=c(0,40),col="black",main="Typical number of traps deployed",xlab="Number of traps per site per bout")
# Calculating summary stats for typical trapping interval
trapCalc <- as.data.frame(unique(bet_field[c('siteID')])) # Create a new dataframe 'trapCalc' with the list of unique siteIDs
trapCalc$trappingInterval <- -1
trapCalc$numTrapsDeployed <- -1
for (j in 1:dim(trapCalc)[1]){
bet_field %>%
filter(siteID==trapCalc$siteID[j])  -> a
trapCalc$trappingInterval[j] <- mean(na.omit(a$daysOfTrapping))
numTrapsDeployed %>%
filter(siteID==trapCalc$siteID[j]) -> a
trapCalc$numTrapsDeployed[j] <- mean(a$n)
}
# Print summary stats of sampling effort
print(trapCalc)
View(bet_div)
#################################
# Did we capture all the species?
#################################
rare_bet <- vector()
bet_div$fieldID <- substr(bet_div$associatedSampleID,1,19)
for (i in sort(unique(sites$siteID))[9]){
# Richness/abundance of single traps
bet_field %>%
filter(siteID==i) -> rare_bet; rare_bet <- rare_bet[c('siteID','beetleRichness','beetleAbundance')]; rare_bet$numTraps <- 1
# Richness/abundance of single plots
bet_field_plot %>%
filter(siteID==i) -> a; a$numTraps <- 4; rare_bet <- rbind(rare_bet,
a[c('siteID','beetleRichness','beetleAbundance',"numTraps")])
#Richness/abundance of single bouts
bet_field_bout %>%
filter(siteID==i) -> a; a$numTraps <- 40; rare_bet <- rbind(rare_bet,
a[c('siteID','beetleRichness','beetleAbundance',"numTraps")])
# isolating each bout
for (j in unique(subset(bet_field,siteID==i)$collectDate)[1]){
for (m in 1:10){
# choosing different numbers of traps
for (k in c(2,8,12,16,20,24,28,32,36)[2]){
bet_field %>%
filter(siteID==i,collectDate==j) -> a
a1 <- sample(a$sampleID,k,replace = FALSE)
# choosing the traps
b <- vector(); b1 <- vector()
for (l in 1:k){
bet_div %>%
filter(fieldID==a1[l]) -> b
b1 <- rbind(b1,b)
}
rare_bet$siteID[dim(rare_bet)[1]+1] <- i
}
}
}
rm(a,a1,b)
}
######
# MAPS
######
par(mfrow=c(1,1))
# Map of beetle abundance by site
plot(Dmap,col="#ADA96E",bg='#77BFC7',main='Beetle Abundance by Site',cex.main=3)
sites <- sites[order(sites[,'numCarabidsCaught']),]; sites$intensity <- heat.colors(13)[13:1]; sites$cex <- c(rep(1,4),rep(1.5,2),rep(2,4),rep(2.5,1),rep(3,1),rep(3.5,1))
points(sites$decimalLongitude,sites$decimalLatitude,bg=sites$intensity,cex=sites$cex,pch=21)
# Map of beetle Richness by site
plot(Dmap,col="#ADA96E",bg='#77BFC7',main='Beetle Richness by Site',cex.main=3)
sites <- sites[order(sites[,'beetleRichness']),]; sites$intensity <- heat.colors(13)[13:1]; sites$cex <- c(rep(1,4),rep(1.5,2),rep(2,4),rep(2.5,1),rep(3,1),rep(3.5,1))
points(sites$decimalLongitude,sites$decimalLatitude,bg=sites$intensity,cex=sites$cex,pch=21)
# Plot invasive species
plot(Dmap,col="#ADA96E",bg='#77BFC7',main='Invasive Species',cex.main=3); bet_div %>% filter(taxonID=='CARNEM')->CARNEM; bet_div %>% filter(taxonID=='TETLAE')->TETLAE
points(CARNEM$decimalLongitude,CARNEM$decimalLatitude,pch=21,bg='violet',cex=2.5)
points(TETLAE$decimalLongitude,TETLAE$decimalLatitude,pch=21,bg='orange',cex=2.5)
# Latitudinal Gradients
par(mfrow=c(1,2))
plot(bet_field_bout$decimalLatitude,bet_field_bout$beetleAbundance,xlab='Latitude',ylab='Beetle Abundance',pch=21,bg="deepskyblue")
plot(bet_field_bout$decimalLatitude,bet_field_bout$beetleRichness,xlab='Latitude',ylab='Beetle Richness',pch=21,bg="deepskyblue")
plot(bet_field_plot$decimalLatitude,bet_field_plot$beetleAbundance,xlab='Latitude',ylab='Beetle Abundance',pch=21,bg="turquoise")
plot(bet_field_plot$decimalLatitude,bet_field_plot$beetleRichness,xlab='Latitude',ylab='Beetle Richness',pch=21,bg="turquoise")
plot(bet_field$decimalLatitude,bet_field$beetleAbundance,xlab='Latitude',ylab='Beetle Abundance',pch=21,bg="darkblue")
plot(bet_field$decimalLatitude,bet_field$beetleRichness,xlab='Latitude',ylab='Beetle Richness',pch=21,bg="darkblue")
# Habitat effect on catch
par(mar=c(15,4.1,4.1,2.5),mfrow=c(1,1))
nlcd$color <- c('goldenrod',rep('darkolivegreen1',2),'darkolivegreen2','darkolivegreen3',rep('forestgreen',3),'darkgreen')
barplot(nlcd$beetleAbundance,names.arg=nlcd$types,col=nlcd$color,ylab="Beetle Abundance",xlab="",las=2)
barplot(nlcd$beetleRichness,names.arg=nlcd$types,col=nlcd$color,ylab="Beetle Richness",xlab="",las=2)
# Diving into site seasonal abundances
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
for (i in sort(unique(sites$siteID))){
# Moving morphospeciesID to taxonID
a <- bet_div
for (l in 1:dim(a)[1]){
if (a$taxonID[l]=='' & a$morphospeciesID[l]!=""){
a$taxonID[l] <- a$morphospeciesID[l]
}
}
# Isolate the diversity within a site
a %>%
filter(siteID==i) %>%
group_by(collectDate,taxonID) %>%
summarize() -> x; x <- as.data.frame(x); x %>% filter(taxonID!='')-> x
x <- x[order(x[,'collectDate']),]
# Figure out the abundance of each taxon separated by date
for (j in 1:dim(x)[1]){
if(nchar(x$taxonID[j])<10){
bet_div %>%
filter(siteID==i,collectDate==x$collectDate[j],taxonID==x$taxonID[j]) -> count
x$individualCount[j] <- sum(count$individualCount)
}
if(nchar(x$taxonID[j])>10){
bet_div %>%
filter(siteID==i,collectDate==x$collectDate[j],morphospeciesID==x$taxonID[j]) -> count
x$individualCount[j] <- sum(count$individualCount)
}
}
x <- x[order(x[,'taxonID']),]
# Color each taxon differently
for (j in 1:dim(x)[1]){
for (k in sort(unique(x$taxonID))){
if(x$taxonID[j]==k){
x$color[j] <- rainbow(n=length(unique(x$taxonID)))[match(k,sort(unique(x$taxonID)))]
}
}
}
plot(x$collectDate,x$individualCount,pch=21,bg=x$color,cex=3,cex.axis=2,
xlab='Date',ylab='Abundance',main=sites$locales[match(i,sites$siteID)])
}
rm(a,count,TETLAE,CARNEM,x,i,k,j,l)
